{"version":3,"sources":["components/FilmsList/FilmsList.js","components/FilmsList/FilmsList.module.css","pages/FilmPage/FilmPage.module.css","components/PageNotFound/PageNotFound.module.css","pages/FilmPage/FilmPage.js","services/getFilmWithId.js","components/PageNotFound/PageNotFound.js","services/getRecommendedFilms.js"],"names":["FilmsList","state","films","this","props","className","styles","map","film","key","id","poster_path","ListItem","to","pathname","from","location","src","alt","ListItemImage","ListItemTitle","title","ListItemYear","release_date","Component","module","exports","category","getTrending","axios","get","PageNotFound","PageNotFoundWrapper","PageNotFound404","PageNotFoundOops","getRecommended","AsyncReviews","lazy","AsyncCast","FilmPage","filmData","showError","recommended","handleGoBack","history","push","search","match","params","getFilmWithId","then","response","setState","data","catch","error","results","slice","prevProps","prevState","type","onClick","Button","FilmWrapper","original_title","backdrop_path","FilmBackground","FilmPosterImage","FilmDetails","FilmDetail","overview","GenresList","genres","genre","GenresListItem","name","AdditionalInfoText","AdditionalInfoWrapper","AdditionalInfo","fallback","path","component"],"mappings":"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","file":"static/js/film-page.65a34b60.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./FilmsList.module.css\";\r\n\r\nclass FilmsList extends Component {\r\n  state = {};\r\n  render() {\r\n    const { films } = this.props;\r\n    return (\r\n      <ul className={styles.FilmsList}>\r\n        {films.map((film) => (\r\n          <Fragment key={film.id}>\r\n            {film.poster_path && (\r\n              <li key={film.id} className={styles.ListItem}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/films/${film.id}`,\r\n                    state: { from: this.props.location },\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w300/${film.poster_path}`}\r\n                    alt=\"film_post\"\r\n                    className={styles.ListItemImage}\r\n                  />\r\n                  <h5 className={styles.ListItemTitle}>{film.title}</h5>\r\n                  <h6 className={styles.ListItemYear}>{film.release_date}</h6>\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilmsList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmsList\":\"FilmsList_FilmsList__1PYYs\",\"ListItem\":\"FilmsList_ListItem__3Vus-\",\"ListItemImage\":\"FilmsList_ListItemImage__4TaJr\",\"ListItemTitle\":\"FilmsList_ListItemTitle__3YI0q\",\"ListItemYear\":\"FilmsList_ListItemYear__3ppXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmWrapper\":\"FilmPage_FilmWrapper__-6qCy\",\"FilmBackground\":\"FilmPage_FilmBackground__3cCEs\",\"FilmPosterImage\":\"FilmPage_FilmPosterImage__1e60J\",\"FilmDetails\":\"FilmPage_FilmDetails__3YoxA\",\"FilmDetail\":\"FilmPage_FilmDetail__1bLoM\",\"GenresList\":\"FilmPage_GenresList__cplYP\",\"GenresListItem\":\"FilmPage_GenresListItem__138Bo\",\"AdditionalInfoWrapper\":\"FilmPage_AdditionalInfoWrapper__3jP9V\",\"AdditionalInfoText\":\"FilmPage_AdditionalInfoText__1spS5\",\"AdditionalInfo\":\"FilmPage_AdditionalInfo__1YbMO\",\"Button\":\"FilmPage_Button__2Qdg3\",\"hvr-push\":\"FilmPage_hvr-push__2l9pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageNotFoundWrapper\":\"PageNotFound_PageNotFoundWrapper__1sVj-\",\"PageNotFound404\":\"PageNotFound_PageNotFound404__2rmpS\",\"PageNotFoundOops\":\"PageNotFound_PageNotFoundOops__6NLJ2\"};","import React, { Component, lazy, Suspense } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport getFilmWithId from \"../../services/getFilmWithId\";\r\nimport styles from \"./FilmPage.module.css\";\r\nimport PageNotFound from \"../../components/PageNotFound/PageNotFound\";\r\nimport FilmsList from \"../../components/FilmsList/FilmsList\";\r\nimport getRecommended from \"../../services/getRecommendedFilms\";\r\n\r\nlet id;\r\nlet category;\r\n\r\nconst AsyncReviews = lazy(() =>\r\n  import(\r\n    \"../../pages/ReviewsPage/ReviewsPage\" /* webpackChunkName: \"reviews-page\" */\r\n  )\r\n);\r\nconst AsyncCast = lazy(() =>\r\n  import(\"../../pages/CastPage/CastPage\" /* webpackChunkName: \"cast-page\" */)\r\n);\r\n\r\nclass FilmPage extends Component {\r\n  state = { filmData: null, showError: false, recommended: null };\r\n  componentDidMount() {\r\n    if (this.props.location.state) {\r\n      category = this.props.location.state.from;\r\n    }\r\n    id = this.props.match.params.id;\r\n    getFilmWithId(id)\r\n      .then((response) => this.setState({ filmData: response.data }))\r\n      .catch((error) => this.setState({ showError: true }));\r\n\r\n    getRecommended(id).then((response) =>\r\n      this.setState({ recommended: response.data.results.slice(0, 5) })\r\n    );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      id = this.props.match.params.id;\r\n      this.setState({ filmData: null, showError: false, recommended: null });\r\n      getFilmWithId(id)\r\n        .then((response) => this.setState({ filmData: response.data }))\r\n        .catch((error) => this.setState({ showError: true }));\r\n\r\n      getRecommended(id).then((response) =>\r\n        this.setState({ recommended: response.data.results.slice(0, 5) })\r\n      );\r\n    }\r\n  }\r\n  // componentWillUnmount() {\r\n  //   this.setState({ filmData: null, showError: false, recommended: null });\r\n  // }\r\n  handleGoBack = () => {\r\n    if (!category) {\r\n      this.props.history.push({\r\n        pathname: \"/Films-App\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.history.push({\r\n      pathname: \"/films\",\r\n      search: `?category=${category}`,\r\n    });\r\n  };\r\n  render() {\r\n    const { filmData, showError, recommended } = this.state;\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.handleGoBack}\r\n          className={styles.Button}\r\n        ></button>\r\n        {filmData && (\r\n          <div className={styles.FilmWrapper}>\r\n            <h1>{filmData.title}</h1>\r\n            <h5>{filmData.original_title}</h5>\r\n            {filmData.backdrop_path && (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500/${filmData.backdrop_path}`}\r\n                alt=\"film_background_poster\"\r\n                className={styles.FilmBackground}\r\n              />\r\n            )}\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500/${filmData.poster_path}`}\r\n              alt=\"film_background_poster\"\r\n              className={styles.FilmPosterImage}\r\n            />\r\n            <div className={styles.FilmDetails}>\r\n              <div className={styles.FilmDetail}>\r\n                <h2>Информация о фильме:</h2>\r\n                {filmData.overview && <p>{filmData.overview}</p>}\r\n                {!filmData.overview && <p>К сожалению, описания нет:(</p>}\r\n              </div>\r\n              <div className={styles.FilmDetail}>\r\n                <h3>Жанры:</h3>\r\n                <ul className={styles.GenresList}>\r\n                  {filmData.genres.map((genre) => (\r\n                    <li key={genre.id} className={styles.GenresListItem}>\r\n                      {genre.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <h4 className={styles.AdditionalInfoText}>\r\n              Также рекомендуем к просмотру:\r\n            </h4>\r\n            {recommended && <FilmsList films={recommended} />}\r\n            <p className={styles.AdditionalInfoText}>\r\n              Дополнительная информация:\r\n            </p>\r\n            <div className={styles.AdditionalInfoWrapper}>\r\n              <Link to={`/films/${id}/reviews`}>\r\n                <p className={styles.AdditionalInfo}>Обзоры</p>\r\n              </Link>\r\n              <Link to={`/films/${id}/cast`}>\r\n                <p className={styles.AdditionalInfo}>Список актеров</p>\r\n              </Link>\r\n            </div>\r\n            <Suspense fallback={<h1>Loading...</h1>}>\r\n              <Route path=\"/films/:id/reviews\" component={AsyncReviews} />\r\n              <Route path=\"/films/:id/cast\" component={AsyncCast} />\r\n            </Suspense>\r\n          </div>\r\n        )}\r\n        {showError && <PageNotFound />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilmPage;\r\n","import axios from \"axios\";\r\n\r\nconst getTrending = (id) => {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=22604d7d4d6b8e16c79f6a5ba307d7e0&language=ru`\r\n  );\r\n};\r\n\r\nexport default getTrending;\r\n","import React from \"react\";\r\nimport styles from \"./PageNotFound.module.css\";\r\n\r\nconst PageNotFound = () => (\r\n  <div className={styles.PageNotFoundWrapper}>\r\n    <p className={styles.PageNotFound404}>404</p>\r\n    <p className={styles.PageNotFoundOops}>Ooops! Something going wrong</p>\r\n    <p>\r\n      Sorry, but this page not found, please make sure that you have good\r\n      internet connection\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import axios from \"axios\";\r\n\r\nconst getRecommended = (id) => {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=22604d7d4d6b8e16c79f6a5ba307d7e0&language=en-US&page=1`\r\n  );\r\n};\r\n\r\nexport default getRecommended;\r\n"],"sourceRoot":""}