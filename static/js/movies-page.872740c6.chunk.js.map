{"version":3,"sources":["components/FilmsList/FilmsList.js","components/FilmsList/FilmsList.module.css","components/QueryNotFound/QueryNotFound.module.css","pages/MoviesPage/SearchBar.module.css","pages/MoviesPage/MoviesPage.js","services/getFilmsWithQuery.js","services/getInfiniteFilmsWithQuery.js","components/QueryNotFound/QueryNotFound.js"],"names":["FilmsList","state","films","this","props","className","styles","map","film","key","id","poster_path","ListItem","to","pathname","from","location","src","alt","ListItemImage","ListItemTitle","title","ListItemYear","release_date","Component","module","exports","invalidQuery","getTrending","query","axios","get","getInfifniteFilmsWithQuery","counter","QueryNotFound","QueryNotFoundWrapper","QueryNotFound404","QueryNotFoundOops","Query","BottomText","MoviesPage","filmsList","showError","onFormSubmit","e","setState","preventDefault","getFilmsWithQuery","then","response","data","results","length","history","push","search","onInputChange","target","value","fetchMoreData","arrToAdd","used","filtered","filter","parsed","queryString","parse","category","onSubmit","SearchForm","placeholder","onChange","required","SearchFormInput","type","SearchFormButton","dataLength","next","hasMore","scrollThreshold"],"mappings":"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","file":"static/js/movies-page.872740c6.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./FilmsList.module.css\";\r\n\r\nclass FilmsList extends Component {\r\n  state = {};\r\n  render() {\r\n    const { films } = this.props;\r\n    return (\r\n      <ul className={styles.FilmsList}>\r\n        {films.map((film) => (\r\n          <Fragment key={film.id}>\r\n            {film.poster_path && (\r\n              <li key={film.id} className={styles.ListItem}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/films/${film.id}`,\r\n                    state: { from: this.props.location },\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w300/${film.poster_path}`}\r\n                    alt=\"film_post\"\r\n                    className={styles.ListItemImage}\r\n                  />\r\n                  <h5 className={styles.ListItemTitle}>{film.title}</h5>\r\n                  <h6 className={styles.ListItemYear}>{film.release_date}</h6>\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilmsList;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmsList\":\"FilmsList_FilmsList__1PYYs\",\"ListItem\":\"FilmsList_ListItem__3Vus-\",\"ListItemImage\":\"FilmsList_ListItemImage__4TaJr\",\"ListItemTitle\":\"FilmsList_ListItemTitle__3YI0q\",\"ListItemYear\":\"FilmsList_ListItemYear__3ppXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueryNotFoundWrapper\":\"QueryNotFound_QueryNotFoundWrapper__2w1kI\",\"QueryNotFound404\":\"QueryNotFound_QueryNotFound404__15Yzf\",\"QueryNotFoundOops\":\"QueryNotFound_QueryNotFoundOops__2vCzm\",\"Query\":\"QueryNotFound_Query__KYJxT\",\"BottomText\":\"QueryNotFound_BottomText__23eau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__1SxOw\",\"SearchForm\":\"SearchBar_SearchForm__1RScY\",\"SearchFormButton\":\"SearchBar_SearchFormButton__3HAwE\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__RGSqv\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1z0wR\"};","import React, { Component } from \"react\";\r\nimport getFilmsWithQuery from \"../../services/getFilmsWithQuery\";\r\nimport FilmsList from \"../../components/FilmsList/FilmsList\";\r\nimport queryString from \"query-string\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport getInfifniteFilmsWithQuery from \"../../services/getInfiniteFilmsWithQuery\";\r\nimport QueryNotFound from \"../../components/QueryNotFound/QueryNotFound\";\r\nimport styles from \"./SearchBar.module.css\";\r\nlet counter = 1;\r\nlet invalidQuery;\r\nclass MoviesPage extends Component {\r\n  state = { query: \"\", filmsList: [], showError: false };\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.search) {\r\n      counter = 1;\r\n      const parsed = queryString.parse(this.props.location.search);\r\n      this.setState({ query: parsed.category });\r\n      getFilmsWithQuery(parsed.category).then((response) =>\r\n        this.setState({ filmsList: response.data.results })\r\n      );\r\n    }\r\n  }\r\n\r\n  onFormSubmit = (e) => {\r\n    counter = 1;\r\n    this.setState({ showError: false });\r\n    e.preventDefault();\r\n    invalidQuery = this.state.query;\r\n    getFilmsWithQuery(this.state.query).then((response) => {\r\n      if (response.data.results.length > 0) {\r\n        this.setState({ filmsList: response.data.results });\r\n      } else {\r\n        this.setState({ filmsList: [], showError: true });\r\n      }\r\n    });\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: `category=${this.state.query}`,\r\n    });\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  fetchMoreData = () => {\r\n    counter += 1;\r\n    getInfifniteFilmsWithQuery(this.state.query, counter).then((response) => {\r\n      let arrToAdd = [...this.state.filmsList, ...response.data.results];\r\n      let used = {};\r\n\r\n      let filtered = arrToAdd.filter(function (film) {\r\n        return film.id in used ? 0 : (used[film.id] = 1);\r\n      });\r\n      this.setState({\r\n        filmsList: filtered,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { query, filmsList, showError } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.onFormSubmit} className={styles.SearchForm}>\r\n          <input\r\n            placeholder=\"Type to search\"\r\n            value={query}\r\n            onChange={this.onInputChange}\r\n            required\r\n            className={styles.SearchFormInput}\r\n          />\r\n          <button type=\"submit\" className={styles.SearchFormButton}></button>\r\n        </form>\r\n        {filmsList.length > 0 && (\r\n          <InfiniteScroll\r\n            dataLength={filmsList}\r\n            next={this.fetchMoreData}\r\n            hasMore={true}\r\n            scrollThreshold={0.8}\r\n          >\r\n            <FilmsList films={filmsList} location={query} />\r\n          </InfiniteScroll>\r\n        )}\r\n        {showError && <QueryNotFound query={invalidQuery} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import axios from \"axios\";\r\n\r\nconst getTrending = (query) => {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=22604d7d4d6b8e16c79f6a5ba307d7e0&query=${query}`\r\n  );\r\n};\r\nexport default getTrending;\r\n","import axios from \"axios\";\r\n\r\nconst getInfifniteFilmsWithQuery = (query, counter) => {\r\n  return axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=22604d7d4d6b8e16c79f6a5ba307d7e0&query=${query}&page=${counter}`\r\n  );\r\n};\r\n\r\nexport default getInfifniteFilmsWithQuery;\r\n","import React from \"react\";\r\nimport styles from \"./QueryNotFound.module.css\";\r\n\r\nconst QueryNotFound = ({ query }) => (\r\n  <div className={styles.QueryNotFoundWrapper}>\r\n    <p className={styles.QueryNotFound404}>OOOPS!</p>\r\n    <p className={styles.QueryNotFoundOops}>\r\n      We can`t find anything with{\" \"}\r\n      <span className={styles.Query}>'{query}'</span> query\r\n    </p>\r\n    <p className={styles.BottomText}>\r\n      Please, specify your query to enjoy our website!\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default QueryNotFound;\r\n"],"sourceRoot":""}